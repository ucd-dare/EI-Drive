#  1. common_params: This module is responsible for defining common parameters that will be used across all other modules. These parameters might include version.
#  Modules
#  ----------
#  common_param: The basic version.
#  common_params_edge_on: Edge units turns on.
#
#
#  2. vehicle_perception: This module is responsible for how the vehicle perceives its environment.
#  Modules
#  ----------
#  perception_demo_false: Objects positions will be retrieved from server directly.
#  perception_demo_true: Objects positions will be retrieved by perception.
#
#
#  3. vehicle_localization: This module is responsible for determining the precise location of the vehicle within its environment.
#  Modules
#  ----------
#  localization_demo_false: Ego position will be retrieved from server directly.
#  localization_demo_true: Ego position will be retrieved by localization.
#
#
#  4. game_map: This module is responsible for managing the traffic map.
#  Modules
#  ----------
#  map_activated: Turn on the traffic map.
#  map_deactivated: Turn off the traffic map.
#
#
#  5. behavior: This module is responsible for the behavior of the vehicle. It includes planner and maximum speed.
#  Modules
#  ----------
#  behavior_demo: The planner will do planning for the vehicles.
#  behavior_demo_manual: The trajectories will be provided manually from files.
#  behavior_scenario: For OpenScenario.
#
#
#  6. controller: This module is responsible for controlling the vehicle's movement based on planning trajectory.
#  Modules
#  ----------
#  pid_controller: Use PID controller for vehicle control.
#  mpc_controller: Use MPC controller for vehicle control.
#
#
#  7. traffic_manager: This module is responsible for managing how the vehicle interacts with traffic. It might include rules for lane changing and traffic-light-related behaviors.
#  Modules
#  ----------
#  lane_change_false: Auto lane change is turned off.
#  lane_change_true: Auto lane change is turned on.
#
#
#  8. scenario: This is responsible for defining the scenario for testing. It includes predefined destinations, spawn points and perception info.
#  Modules
#  ----------
#  demo: The demo to show the function of edge.
#  demo_loop: The scenario of multi-destinations.
#  openscenario_X: The customized scenario for algorithm testing with ScenarioRunner.


defaults:
  - common_params: common_param
  - vehicle_perception: perception_demo_false
  - vehicle_localization: localization_demo_false
  - game_map: map_deactivated
  - behavior: behavior_demo
  - controller: pid_controller
  - traffic_manager: lane_change_false
  - scenario: demo